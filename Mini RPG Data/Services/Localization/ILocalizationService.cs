using Mini_RPG_Data.Character_;
using Mini_RPG_Data.Controllers;
using Mini_RPG_Data.Controllers.Character_;
using Mini_RPG_Data.Controllers.Inventory_.Items;
using Mini_RPG_Data.Controllers.Map_;

namespace Mini_RPG_Data.Services.Localization;

public interface ILocalizationService : IService
{
    event Action? LanguageChanged;

    string Button_NewGame();
    string Button_LoadGame();
    string Button_Exit();
    string Button_StartGame();
    string Label_AbilityPoints();
    string Label_Charisma();
    string Label_Constitution();
    string ItemName(string name);
    string Label_Dexterity();
    string Label_Perception();
    string Label_Race();
    string Label_Strength();
    string ToolTip_Race();
    string ToolTip_AbilityPoints();
    string ToolTip_Charisma();
    string Cost();
    string ToolTip_Strength();
    string ToolTip_Dexterity();
    string ToolTip_Constitution();
    string RaceName(Race race);
    string ToolTip_Perception();
    string TextBox_Name();
    string HungerLevelName(HungerLevel hungerLevel);
    string PlayerUse();
    string ThirstLevelName(ThirstLevel thirstLevel);
    string Bitton_MainMenu();
    string Label_Intro();
    string Label_Abilities();
    string Button_GoToGame();
    string Level();
    string Button_Rest();
    string Button_Attack();
    string Button_TryLeaveBattle();
    string Button_Trader();
    string Button_RestInTown();
    string SellCost();
    string Button_LeaveTown();
    string Menu();
    string SaveAndExit();
    string Button_Log();
    string Button_EnterTown();
    string UnexploredLocation();
    string EmptyExploredLocation();
    string Town();
    string Enemy();
    string Button_Close();
    string LevelBoarder();
    string DamageType();
    string PlayerMoveSuccessfully(Direction direction);
    string DamageTypeName(DamageType damageType);
    string GripName(Grip grip);
    string Grip();
    string Damage();
    string PlayerMoveUnsuccessfully(Direction direction);
    string Label_Equipment();
    string PlayerRest();
    string Message_YouFindLoot();
    string Message_Coins();
    string Message_YouFindLockedChest();
    string Message_PickLockedChestSuccess();
    string Message_PickLockedChestFail();
    string Message_BreakChestSuccess();
    string Message_BreakChestFail();
    string Message_YouFindHiddenLoot();
    string Message_FindTrapSuccess(TrapType trapType);
    string Message_FindTrapFail(TrapType trapType);
    string ArmorType();
    string Armor();
    string Shop();
    string ArmorTypeName(ArmorType armorType);
    string DodgePenalty();
    string MinBlockBonus();
    string MaxBlockBonus();
    string Message_RestInTown();
    string Message_YouRestInTown();
    string Message_YouDoNotRestInTown();
    string Message_BattleStart();
    string Message_YouAreEscaped();
    string Message_YouAreNotEscaped();
    string FirstHitsSecondWithDamage();
    string Message_Experience();
    string YouGained();
    string CharacterGainedNewLevel(string name);
}
